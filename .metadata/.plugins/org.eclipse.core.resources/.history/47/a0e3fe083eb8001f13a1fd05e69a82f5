package calculator;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;

public class Calculation {
	private int value1, value2, inputSize, Total;
	private String temp, peek, operation;
	private Queue<String> queueValue = new LinkedList<>();
	
	public void calculating() {
		filterValue();
		operation();
	}
	
	public void addToQueueValue(String inputValue) {
		this.queueValue.add(inputValue);
	}
	
	private void decreaseQueue() {
		temp = this.queueValue.remove();
	}
	
	private void peekQueue() {
		peek = this.queueValue.peek();
	}
	
	private void filterValue() {
		this.inputSize = queueValue.size();
		int index = 0;
		
		while(index < inputSize) {
			decreaseQueue();
			this.value1 = Integer.parseInt(this.temp);
			if(index % 2 == 0) {
//				int ii = 0;
				decreaseQueue();
				operation = this.temp;
//				ii++;
			}
			decreaseQueue();
			this.value2 = Integer.parseInt(this.temp);
			operation(value1, value2, operation);
		}
		
	}
	
	private void operation(int val1, int val2, String opr) {
//		String opr;
//		for (int i = 0; i < operation.length; i++) {
//			if(operation[i] == "+" || operation[i] == "-") {
//				opr = operation[i];
//			}
//			if(operation[i] == "*" || operation[i] == "/") {
//				opr
//			}
//			
//			
//		}
		
		switch(opr) {
			case "+" : { this.Total = val1 + val2; break;}
			case "-" : { this.Total = val1 - val2; break;}
			case "*" : { this.Total = val1 * val2; break;}
			case "/" : { this.Total = val1 / val2; break;}
			default : System.err.println("cant defined");
		
		}
	}
	
	public int getTotal() {
		return this.Total;
	}
}
